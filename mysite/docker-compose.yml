version: '3'

services:

  web:
    build: .
    command: >
      bash -c "
      ./manage.py collectstatic --noinput &&
      ./manage.py makemigrations &&
      ./manage.py migrate &&
      echo \"from django.contrib.auth import get_user_model; 
      User = get_user_model(); 
      User.objects.filter(username='admin').exists() or 
      User.objects.create_superuser(username='admin', email='admin@example.com', password='admin')\" | ./manage.py shell &&
      gunicorn -b 0.0.0.0:8000 kino_site.wsgi:application"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db


  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume: